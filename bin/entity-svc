#!/usr/bin/env node
/**
 * Copyright (c) 2017 Callan Peter Milne
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
 * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */
'use strict';

const fs = require('fs');
const express = require('express');

const app = express();

app.use(function(req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  if ('options' === req.method.toLowerCase()) {
    res.send(204);
    return;
  }
  next();
});

const pkg = JSON.parse(fs.readFileSync(__dirname + '/../package.json'));

writeOut(`data-studio/entity-svc@v${pkg.version}`);
writeOut(`Copyright (c) 2017 Callan Peter Milne`);
writeOut(``);
writeOut(`Permission to use, copy, modify, and/or distribute this software for any`);
writeOut(`purpose with or without fee is hereby granted, provided that the above`);
writeOut(`copyright notice and this permission notice appear in all copies.`);
writeOut(``);
writeOut(`THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH`);
writeOut(`REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY`);
writeOut(`AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,`);
writeOut(`INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM`);
writeOut(`LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR`);
writeOut(`OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR`);
writeOut(`PERFORMANCE OF THIS SOFTWARE.`);

require('../routes')(app);

app.listen(3000, function () {
  writeOut(`Web service listening on port 3000`);
});

function writeOut (msg) {
  process.stdout.write(`!> ${msg}\n`);
}
